# -*- coding: utf-8 -*-
"""Analysis_Air-Quality_Dashboard.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t4Qjt_ZbGLibOQ9JBkVt3uaxrWXs9t2F
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load Dataframe
def load_data():
    aotizhongxin_dt = pd.read_csv('Dataframe/PRSA_Data_Aotizhongxin_20130301-20170228.csv')
    changping_dt = pd.read_csv('Dataframe/PRSA_Data_Changping_20130301-20170228.csv')
    dingling_dt = pd.read_csv('Dataframe/PRSA_Data_Dingling_20130301-20170228.csv')
    aotizhongxin_dt['date'] = pd.to_datetime(aotizhongxin_dt[['year', 'month', 'day', 'hour']])
    changping_dt['date'] = pd.to_datetime(changping_dt[['year', 'month', 'day', 'hour']])
    dingling_dt['date'] = pd.to_datetime(dingling_dt[['year', 'month', 'day', 'hour']])
    return aotizhongxin_dt, changping_dt, dingling_dt

# Main dashboard
def main():
    st.title("Analisis Kualitas Udara")

    # Introduction
    st.markdown("""
    ### Pertanyaan Bisnis:
    1. Di antara ketiga kota tersebut, kota mana yang memiliki distribusi polutan O3 tertinggi?
    2. Bagaimana pengaruh TEMP terhadap konsentrasi polutan CO dan O3 pada kota Dingling?
    3. Bagaimana pengaruh RAIN terhadap konsentrasi polutan PM10 dan PM2.5 pada kota Aotizhongxin?
    """)

    # Load data
    aotizhongxin_dt, changping_dt, dingling_dt = load_data()

    # Sidebar filters
    st.sidebar.header("Filter Data")
    date_range = st.sidebar.date_input(
        "Pilih Rentang Tanggal",
        [aotizhongxin_dt['date'].min(), aotizhongxin_dt['date'].max()],
        min_value=aotizhongxin_dt['date'].min(),
        max_value=aotizhongxin_dt['date'].max()
    )

    selected_region = st.sidebar.multiselect(
        "Pilih Wilayah", ['Aotizhongxin', 'Changping', 'Dingling'], default=['Aotizhongxin', 'Changping', 'Dingling']
    )

    # Menyaring data berdasarkan pilihan
    filtered_dingling = dingling_dt[(dingling_dt['date'] >= pd.to_datetime(date_range[0])) &
                                      (dingling_dt['date'] <= pd.to_datetime(date_range[1]))]

    # Di antara ketiga kota tersebut, kota mana yang memiliki distribusi polutan O3 tertinggi?
    if 'Aotizhongxin' in selected_region and 'Changping' in selected_region and 'Dingling' in selected_region:
        fig, ax = plt.subplots(figsize=(12, 6))
        sns.histplot(dingling_dt['O3'], bins=20, color='red', label='Dingling', kde=True, ax=ax)
        sns.histplot(changping_dt['O3'], bins=20, color='yellow', label='Changping', kde=True, ax=ax)
        sns.histplot(aotizhongxin_dt['O3'], bins=20, color='blue', label='Aotizhongxin', kde=True, ax=ax)
        ax.set_title('Perbandingan Distribusi Polutan O3')
        ax.set_xlabel('Distribusi O3')
        ax.set_ylabel('Frekuensi')
        ax.legend()
        st.pyplot(fig)

    # Bagaimana pengaruh TEMP terhadap konsentrasi polutan CO dan O3 pada kota Dingling?
    st.subheader("Pengaruh Perubahan Suhu terhadap CO dan O3")
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.scatterplot(data=filtered_dingling, x='TEMP', y='CO', color='blue', label='CO', ax=ax)
    sns.scatterplot(data=filtered_dingling, x='TEMP', y='O3', color='red', label='O3', ax=ax)
    ax.set_title('Pengaruh Suhu terhadap distribusi CO dan O3 di Dingling')
    ax.set_xlabel('TEMP (Suhu)')
    ax.set_ylabel('Distribusi CO dan O3')
    ax.legend(title='Polutan')
    ax.grid()
    st.pyplot(fig)

    # Bagaimana pengaruh RAIN terhadap konsentrasi polutan PM10 dan PM2.5 pada kota Aotizhongxin?
    st.subheader("Pengaruh Curah Hujan terhadap PM10 dan PM2.5")
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.scatterplot(data=aotizhongxin_dt, x='RAIN', y='PM10', color='blue', label='PM10', ax=ax)
    sns.scatterplot(data=aotizhongxin_dt, x='RAIN', y='PM2.5', color='red', label='PM2.5', ax=ax)
    ax.set_title('Pengaruh RAIN (Curah Hujan) terhadap Konsentrasi PM10 dan PM2.5 di Aotizhongxin')
    ax.set_xlabel('RAIN (Curah Hujan)')
    ax.set_ylabel('Konsentrasi PM10 dan PM2.5')
    ax.legend(title='Polutan')
    ax.grid()
    st.pyplot(fig)

if __name__ == "__main__":
    main()
